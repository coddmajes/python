#斐波拉切
#利用__iter__进行迭代
class Fib(object):
	def __init__(self):
		self.a,self.b=0,1
	def __iter__(self):
		return self# 实例本身就是迭代对象，故返回自己
	def __next__(self):
		self.a,self.b=self.b,self.a+self.b
		if self.a>100000:
			raise StopIteration()
		return self.a
		
		
for n in Fib():
	print(n)
	
'''
#利用__getitem__()进行按照下标取元素
class Fib(object):
	def __getitem__(self,n):
		a,b=1,1
		for x in range(n):
			a,b=b,a+b
		return a
		
f=Fib()
'''

'''

#利用切片方法在__getitem__中进行切片处理
#__getitem__()传入的参数可能是一个int，也可能是一个切片对象slice
class Fib(object):
	def __getitem__(self,n):
		if isinstance(n,int):
			a,b=1,1
			for x in range(n):
				a,b=b,a+b
			return a
		if isinstance(n,slice):
			start=n.start
			stop=n.stop
			if start is None:
				start=0
			a,b=1,1
			L=[]
			for x in range(stop):
				if x>=start:
					L.append(a)
				a,b=b,a+b
			return L
f=Fib()
f[0:5]
f[:10]
'''
